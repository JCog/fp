#ifndef ENUMS_H
#define ENUMS_H

typedef int8_t ActionState;
enum action_state {
    ACTION_STATE_IDLE,
    ACTION_STATE_WALK,
    ACTION_STATE_RUN,
    ACTION_STATE_JUMP,
    ACTION_STATE_BOUNCE,            /* Used with Kooper */
    ACTION_STATE_HOP,               /* Released A before apex of jump */
    ACTION_STATE_LAUNCH,            /* Shy Guy Toybox jack-in-the-boxes */
    ACTION_STATE_LAND_ON_SWITCH,    /* Small red/blue ! switches */
    ACTION_STATE_FALLING,
    ACTION_STATE_STEP_DOWN,
    ACTION_STATE_LAND,
    ACTION_STATE_STEP_DOWN_LAND,

    // Following action states prohibit movement
    ACTION_STATE_TALK,                /* Reading signs doesn't count */
    ACTION_STATE_SPIN_JUMP,
    ACTION_STATE_GROUND_POUND,
    ACTION_STATE_ULTRA_JUMP,
    ACTION_STATE_ULTRA_POUND,
    ACTION_STATE_SLIDE,
    ACTION_STATE_HAMMER,
    ACTION_STATE_13,
    ACTION_STATE_14,
    ACTION_STATE_HIT_FIRE,            /* Causes Mario to fly up and take damage. Used for fire bars. */
    ACTION_STATE_UNKNOWN_16,          /* some kind of knockback, does no damage */
    ACTION_STATE_HIT_LAVA,
    ACTION_STATE_18,
    ACTION_STATE_SNEAKY_PARASOL,
    ACTION_STATE_SPIN,
    ACTION_STATE_ENEMY_FIRST_STRIKE,
    ACTION_STATE_GET_STAR_SPIRIT,
    ACTION_STATE_USE_SPINNING_FLOWER,
    ACTION_STATE_USE_MUNCHLESIA,      /* Set by the jan_09 squishy flower entity; throws the player in the air. */
    ACTION_STATE_USE_TWEESTER,
    ACTION_STATE_BOUNCE_OFF_SWITCH,   /* Small red/blue ! switches */
    ACTION_STATE_RIDE,
    ACTION_STATE_STEP_UP,
    ACTION_STATE_23,
    ACTION_STATE_24,
    ACTION_STATE_25,
    ACTION_STATE_USE_SPRING,
};

typedef uint16_t Group;
enum groups {
    GROUP_GOOMBA_VILLAGE,
    GROUP_TOAD_TOWN,
    GROUP_SEWERS,
    GROUP_WHALE,
    GROUP_PEACHS_CASTLE,
    GROUP_STAR_REGION,
    GROUP_KOOPA_VILLAGE_PLEASANT_PATH,
    GROUP_KOOPA_BROS_FORTRESS,
    GROUP_MT_RUGGED,
    GROUP_DRY_DRY_OUTPOST,
    GROUP_DRY_DRY_DESERT,
    GROUP_DRY_DRY_RUINS,
    GROUP_FOREVER_FOREST,
    GROUP_BOOS_MANSION,
    GROUP_GUSTY_GULCH,
    GROUP_TUBBAS_MANSION,
    GROUP_SHY_GUYS_TOY_BOX,
    GROUP_LAVA_LAVA_ISLAND,
    GROUP_VOLCANO,
    GROUP_FLOWER_FIELDS,
    GROUP_SHIVER_REGION,
    GROUP_CRYSTAL_PALACE,
    GROUP_BOWSERS_CASTLE,
    GROUP_OUTSIDE_PEACHS_CASTLE,
    GROUP_CREDITS,
    GROUP_MINI_GAMES,
    GROUP_GAME_OVER,
    GROUP_DEBUG,
};

typedef uint8_t Partner;
enum partners {
    PARTNER_NONE,
    PARTNER_GOOMBARIO,
    PARTNER_KOOPER,
    PARTNER_BOMBETTE,
    PARTNER_PARAKARRY,
    PARTNER_GOOMPA,
    PARTNER_WATT,
    PARTNER_SUSHIE,
    PARTNER_LAKILESTER,
    PARTNER_BOW,
    PARTNER_GOOMBARIA,
    PARTNER_TWINK,
};

typedef uint16_t KeyItem;
enum key_items {
    KEY_ITEM_LUCKY_STAR = 0x7,
    KEY_ITEM_MAP,
    KEY_ITEM_BIG_MAP,
    KEY_ITEM_FIRST_DEGREE_CARD,
    KEY_ITEM_SECOND_DEGREE_CARD,
    KEY_ITEM_THIRD_DEGREE_CARD,
    KEY_ITEM_FOURTH_DEGREE_CARD,
    KEY_ITEM_DIPLOMA,
    KEY_ITEM_ULTRA_STONE,
    KEY_ITEM_FORTRESS_KEY,
    KEY_ITEM_RUINS_KEY,
    KEY_ITEM_PULSE_STONE,
    KEY_ITEM_CASTLE_KEY_1,
    KEY_ITEM_PALACE_KEY,
    KEY_ITEM_LUNAR_STONE,
    KEY_ITEM_PYRAMID_STONE,
    KEY_ITEM_DIAMOND_STONE,
    KEY_ITEM_GOLDEN_VASE,
    KEY_ITEM_KOOPERS_SHELL,
    KEY_ITEM_CASTLE_KEY_2,
    KEY_ITEM_FOREST_PASS,
    KEY_ITEM_WEIGHT,
    KEY_ITEM_BOOS_PORTRAIT,
    KEY_ITEM_CRYSTAL_BERRY,
    KEY_ITEM_MYSTICAL_KEY,
    KEY_ITEM_STOREROOM_KEY,
    KEY_ITEM_TOY_TRAIN,
    KEY_ITEM_RECORD,
    KEY_ITEM_FRYING_PAN,
    KEY_ITEM_DICTIONARY,
    KEY_ITEM_MYSTERY_NOTE,
    KEY_ITEM_SUSPICIOUS_NOTE,
    KEY_ITEM_CRYSTAL_BALL,
    KEY_ITEM_SCREWDRIVER,
    KEY_ITEM_COOKBOOK,
    KEY_ITEM_JADE_RAVEN,
    KEY_ITEM_MAGICAL_SEED_1,
    KEY_ITEM_MAGICAL_SEED_2,
    KEY_ITEM_MAGICAL_SEED_3,
    KEY_ITEM_MAGICAL_SEED_4,
    KEY_ITEM_TOAD_DOLL,
    KEY_ITEM_CALCULATOR,
    KEY_ITEM_BUCKET,
    KEY_ITEM_SCARF,
    KEY_ITEM_RED_KEY,
    KEY_ITEM_BLUE_KEY,
    KEY_ITEM_A,
    KEY_ITEM_LETTER_01,
    KEY_ITEM_LETTER_02,
    KEY_ITEM_LETTER_03,
    KEY_ITEM_LETTER_04,
    KEY_ITEM_LETTER_05,
    KEY_ITEM_LETTER_06,
    KEY_ITEM_LETTER_07,
    KEY_ITEM_LETTER_08,
    KEY_ITEM_LETTER_09,
    KEY_ITEM_LETTER_U1,
    KEY_ITEM_LETTER_10,
    KEY_ITEM_LETTER_11,
    KEY_ITEM_LETTER_U2,
    KEY_ITEM_LETTER_U3,
    KEY_ITEM_LETTER_U4,
    KEY_ITEM_LETTER_12,
    KEY_ITEM_LETTER_13,
    KEY_ITEM_LETTER_14,
    KEY_ITEM_LETTER_15,
    KEY_ITEM_LETTER_16,
    KEY_ITEM_LETTER_17,
    KEY_ITEM_LETTER_18,
    KEY_ITEM_LETTER_19,
    KEY_ITEM_LETTER_U5,
    KEY_ITEM_LETTER_20,
    KEY_ITEM_LETTER_21,
    KEY_ITEM_LETTER_22,
    KEY_ITEM_LETTER_23,
    KEY_ITEM_LETTER_24,
    KEY_ITEM_ARTIFACT,
    KEY_ITEM_LETTER_25,
    KEY_ITEM_LETTER_U6,
    KEY_ITEM_DOLLY,
    KEY_ITEM_WATER_STONE,
    KEY_ITEM_MAGICAL_BEAN,
    KEY_ITEM_FERTILE_SOIL,
    KEY_ITEM_MIRACLE_WATER,
    KEY_ITEM_VOLCANO_VASE,
    KEY_ITEM_TAPE,
    KEY_ITEM_SUGAR,
    KEY_ITEM_SALT,
    KEY_ITEM_EGG_CAKE,
    KEY_ITEM_CREAM,
    KEY_ITEM_STRAWBERRY,
    KEY_ITEM_BUTTER,
    KEY_ITEM_CLEANSER,
    KEY_ITEM_WATER,
    KEY_ITEM_FLOUR,
    KEY_ITEM_MILK,
    KEY_ITEM_LYRICS,
    KEY_ITEM_MELODY,
    KEY_ITEM_MAILBAG,
    KEY_ITEM_CASTLE_KEY_3,
    KEY_ITEM_ODD_KEY,
    KEY_ITEM_STAR_STONE,
    KEY_ITEM_SNEAKY_PARASOL,
    KEY_ITEM_KOOPA_LEGENDS,
    KEY_ITEM_LUIGIS_AUTOGRAPH,
    KEY_ITEM_EMPTY_WALLET,
    KEY_ITEM_MERLUVLEES_AUTOGRAPH,
    KEY_ITEM_KOOPA_SHELL,
    KEY_ITEM_OLD_PHOTO,
    KEY_ITEM_GLASSES,
    KEY_ITEM_PHOTOGRAPH,
    KEY_ITEM_PACKAGE,
    KEY_ITEM_RED_JAR,
    KEY_ITEM_CASTLE_KEY_4,
    KEY_ITEM_WAREHOUSE_KEY,
    KEY_ITEM_PRISON_KEY_1,
    KEY_ITEM_SILVER_CREDIT,
    KEY_ITEM_GOLD_CREDIT,
    KEY_ITEM_PRISON_KEY_2,
    KEY_ITEM_PRISON_KEY_3,
    KEY_ITEM_PRISON_KEY_4,
};

typedef uint16_t Item;
enum items {
    ITEM_FIRE_FLOWER = 0x80,
    ITEM_SNOWMAN_DOLL,
    ITEM_THUNDER_RAGE,
    ITEM_SHOOTING_STAR,
    ITEM_THUNDER_BOLT,
    ITEM_PEBBLE,
    ITEM_DUSTY_HAMMER,
    ITEM_INSECTICIDE_HERB,
    ITEM_STONE_CAP,
    ITEM_TASTY_TONIC,
    ITEM_MUSHROOM,
    ITEM_VOLT_SHROOM,
    ITEM_SUPER_SHROOM,
    ITEM_DRIED_SHROOM,
    ITEM_ULTRA_SHROOM,
    ITEM_SLEEPY_SHEEP,
    ITEM_POW_BLOCK,
    ITEM_HUSTLE_DRINK,
    ITEM_STOP_WATCH,
    ITEM_WHACKAS_BUMP,
    ITEM_APPLE,
    ITEM_LIFE_SHROOM,
    ITEM_MYSTERY,
    ITEM_REPEL_GEL,
    ITEM_FRIGHT_JAR,
    ITEM_PLEASE_COME_BACK,
    ITEM_DIZZY_DIAL,
    ITEM_SUPER_SODA,
    ITEM_LEMON,
    ITEM_LIME,
    ITEM_BLUE_BERRY,
    ITEM_RED_BERRY,
    ITEM_YELLOW_BERRY,
    ITEM_BUBBLE_BERRY,
    ITEM_JAMMIN_JELLY,
    ITEM_MAPLE_SYRUP,
    ITEM_HONEY_SYRUP,
    ITEM_GOOMNUT,
    ITEM_KOOPA_LEAF,
    ITEM_DRIED_PASTA,
    ITEM_DRIED_FRUIT,
    ITEM_STRANGE_LEAF,
    ITEM_CAKE_MIX,
    ITEM_EGG,
    ITEM_COCONUT,
    ITEM_MELON,
    ITEM_STINKY_HERB,
    ITEM_ICED_POTATO,
    ITEM_SPICY_SOUP,
    ITEM_APPLE_PIE,
    ITEM_HONEY_ULTRA,
    ITEM_MAPLE_ULTRA,
    ITEM_JELLY_ULTRA,
    ITEM_KOOPASTA,
    ITEM_FRIED_SHROOM,
    ITEM_SHROOM_CAKE,
    ITEM_SHROOM_STEAK,
    ITEM_HOT_SHROOM,
    ITEM_SWEET_SHROOM,
    ITEM_YUMMY_MEAL,
    ITEM_HEALTHY_JUICE,
    ITEM_BLAND_MEAL,
    ITEM_DELUXE_FEAST,
    ITEM_SPECIAL_SHAKE,
    ITEM_BIG_COOKIE,
    ITEM_CAKE,
    ITEM_MISTAKE,
    ITEM_KOOPA_TEA,
    ITEM_HONEY_SUPER,
    ITEM_MAPLE_SUPER,
    ITEM_JELLY_SUPER,
    ITEM_SPAGHETTI,
    ITEM_EGG_MISSILE,
    ITEM_FRIED_EGG,
    ITEM_HONEY_SHROOM,
    ITEM_HONEY_CANDY,
    ITEM_ELECTRO_POP,
    ITEM_FIRE_POP,
    ITEM_LIME_CANDY,
    ITEM_COCO_POP,
    ITEM_LEMON_CANDY,
    ITEM_JELLY_POP,
    ITEM_STRANGE_CAKE,
    ITEM_KOOKY_COOKIE,
    ITEM_FROZEN_FRIES,
    ITEM_POTATO_SALAD,
    ITEM_NUTTY_CAKE,
    ITEM_MAPLE_SHROOM,
    ITEM_BOILED_EGG,
    ITEM_YOSHI_COOKIE,
    ITEM_JELLY_SHROOM_1,
    ITEM_JELLY_SHROOM_2,
    ITEM_JELLY_SHROOM_3,
    ITEM_JELLY_SHROOM_4,
    ITEM_JELLY_SHROOM_5,
    ITEM_JELLY_SHROOM_6,
};

typedef uint16_t Badge;
enum badges {
    BADGE_SPIN_SMASH = 0x0e0,
    BADGE_MULTIBOUNCE,
    BADGE_POWER_PLUS_A,
    BADGE_DODGE_MASTER,
    BADGE_POWER_BOUNCE,
    BADGE_SPIKE_SHIELD,
    BADGE_FIRST_ATTACK,
    BADGE_HP_PLUS_A,
    BADGE_QUAKE_HAMMER,
    BADGE_DOUBLE_DIP,
    BADGE_MYSTERY_SCROLL,
    BADGE_SLEEP_STOMP,
    BADGE_FIRE_SHIELD,
    BADGE_QUICK_CHANGE,
    BADGE_D_DOWN_POUND,
    BADGE_DIZZY_STOMP,
    BADGE_SMASH_CHARGE_U,
    BADGE_PRETTY_LUCKY,
    BADGE_FEELING_FINE,
    BADGE_ATTACK_FX_A,
    BADGE_ALL_OR_NOTHING,
    BADGE_HP_DRAIN,
    BADGE_JUMP_CHARGE_U,
    BADGE_SLOW_GO,
    BADGE_FP_PLUS_A,
    BADGE_MEGA_RUSH,
    BADGE_ICE_POWER,
    BADGE_DEFEND_PLUS,
    BADGE_PAY_OFF,
    BADGE_MONEY_MONEY,
    BADGE_CHILL_OUT,
    BADGE_HAPPY_HEART_A,
    BADGE_ZAP_TAP,
    BADGE_BERSERKER,
    BADGE_RIGHT_ON,
    BADGE_RUNAWAY_PAY,
    BADGE_REFUND,
    BADGE_FLOWER_SAVER_A,
    BADGE_TRIPLE_DIP,
    BADGE_HAMMER_THROW,
    BADGE_MEGA_QUAKE,
    BADGE_SMASH_CHARGE,
    BADGE_JUMP_CHARGE,
    BADGE_S_SMASH_CHG,
    BADGE_S_JUMP_CHARGE,
    BADGE_POWER_RUSH,
    BADGE_AUTO_JUMP,
    BADGE_AUTO_SMASH,
    BADGE_CRAZY_HEART,
    BADGE_LAST_STAND,
    BADGE_CLOSE_CALL,
    BADGE_P_UP_D_DOWN,
    BADGE_LUCKY_DAY,
    BADGE_MEGA_HP_DRAIN,
    BADGE_P_DOWN_D_UP,
    BADGE_POWER_QUAKE,
    BADGE_AUTO_MULTIBOUNCE,
    BADGE_FLOWER_FANATIC,
    BADGE_HEART_FINDER,
    BADGE_FLOWER_FINDER,
    BADGE_SPIN_ATTACK,
    BADGE_DIZZY_ATTACK,
    BADGE_I_SPY,
    BADGE_SPEEDY_SPIN,
    BADGE_BUMP_ATTACK,
    BADGE_POWER_JUMP,
    BADGE_SUPER_JUMP,
    BADGE_MEGA_JUMP,
    BADGE_POWER_SMASH,
    BADGE_SUPER_SMASH,
    BADGE_MEGA_SMASH,
    BADGE_POWER_SMASH_U1,
    BADGE_POWER_SMASH_U2,
    BADGE_DEEP_FOCUS_A,
    BADGE_SUPER_FOCUS,
    BADGE_SHRINK_SMASH,
    BADGE_SHELL_CRACK,
    BADGE_KAIDEN,
    BADGE_D_DOWN_JUMP,
    BADGE_SHRINK_STOMP,
    BADGE_DAMAGE_DODGE_A,
    BADGE_EARTHQUAKE_JUMP,
    BADGE_DEEP_FOCUS_B,
    BADGE_DEEP_FOCUS_C,
    BADGE_HP_PLUS_B,
    BADGE_FP_PLUS_B,
    BADGE_HAPPY_HEART_B,
    BADGE_HAPPY_HEART_U,
    BADGE_FLOWER_SAVER_B,
    BADGE_FLOWER_SAVER_U,
    BADGE_DAMAGE_DODGE_B,
    BADGE_DAMAGE_DODGE_U,
    BADGE_POWER_PLUS_B,
    BADGE_POWER_PLUS_U,
    BADGE_DEFEND_PLUS_U1,
    BADGE_DEFEND_PLUS_U2,
    BADGE_HAPPY_FLOWER_A,
    BADGE_HAPPY_FLOWER_B,
    BADGE_HAPPY_FLOWER_U,
    BADGE_GROUP_FOCUS,
    BADGE_PEEKABOO,
    BADGE_ATTACK_FX_D,
    BADGE_ATTACK_FX_B,
    BADGE_ATTACK_FX_E,
    BADGE_ATTACK_FX_C,
    BADGE_ATTACK_FX_F_1,
    BADGE_HP_PLUS_C,
    BADGE_HP_PLUS_U1,
    BADGE_HP_PLUS_U2,
    BADGE_FP_PLUS_C,
    BADGE_FP_PLUS_U1,
    BADGE_FP_PLUS_U2,
    BADGE_HEALTHY_HEALTHY,
    BADGE_ATTACK_FX_F_2,
    BADGE_ATTACK_FX_F_3,
    BADGE_ATTACK_FX_F_4,
    BADGE_ATTACK_FX_F_5,
};

#endif
